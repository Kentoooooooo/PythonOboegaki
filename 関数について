🔵関数もオブジェクトなので、変数に代入して使える
def fib(n):   例えばｎ未満のフィボナッチ数列を出力する関数fibがあったとする
  ...
  return OOO

f = fib   ここでオブジェクトとしての関数fibを変数fに代入する
f(1000)   作成したオブジェクトに引数として関数fを実行する

🔵スコープについての話
関数内でグローバル変数iをi = 456みたいな感じで代入っぽい操作をすると
pythonの場合はローカル変数としてiが再定義されていることになる
⇒再びグローバルな領域で表示すると値が書き換わっていない。

関数内でグローバル変数と同じ名前の変数を宣言する場合は一番最初に行わないとエラーになる
exp)
i = 123
def func1();
  i = 456
  print(i)  # 456 再定義されたiが出力される

print(i)  # 123 グローバル変数としてのiが出力される

def func2():
  print(i) 
  i = 456 # エラー グローバル変数を関数内で利用したのにグローバル変数と同じ名前のローカル変数を定義しようとしている。

def func3():
  global i # グローバル変数のiを利用するよってことを宣言している
  i = 456 # グローバル変数iを直接書き換えていることを意味する
  print(i) # 456

print(i) # 456 func3内でグローバル変数iの値を直接書き換えているので出力の結果が変化している。
